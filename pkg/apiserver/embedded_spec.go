// Code generated by go-swagger; DO NOT EDIT.

package apiserver

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "This is a simple api to query vault for policies and entities",
    "title": "vault-query",
    "contact": {
      "email": "subbaksh@cisco.com"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/auth/search/policy": {
      "get": {
        "security": [
          {
            "TokenAccessorAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "Search which auth roles have a policy",
        "operationId": "searchAuthWithPolicy",
        "parameters": [
          {
            "type": "string",
            "description": "Name of policy",
            "name": "policyName",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Namespace of the policy",
            "name": "namespace",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "authRoles": {
                  "description": "The auth roles that have the policy",
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                },
                "messages": {
                  "description": "Human readable messages from the server",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Message"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "messages": {
                  "description": "Human readable messages from the server",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Message"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token accessor invalid/not enough permissions",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Policy not found",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal error processing request",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/group/search/policy": {
      "get": {
        "security": [
          {
            "TokenAccessorAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "group"
        ],
        "summary": "Search which groups have a policy",
        "operationId": "searchGroupWithPolicy",
        "parameters": [
          {
            "type": "string",
            "description": "Name of policy",
            "name": "policyName",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Namespace of the policy",
            "name": "namespace",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "additionalGroups": {
                  "description": "Any additional groups that might be related (such as parent or member groups)",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "groups": {
                  "description": "The groups that have the policy",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "messages": {
                  "description": "Human readable messages from the server",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Message"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "messages": {
                  "description": "Human readable messages from the server",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Message"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token accessor invalid/not enough permissions",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Policy not found",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal error processing request",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/policy/fetch/{policyName}": {
      "get": {
        "security": [
          {
            "TokenAccessorAuth": []
          }
        ],
        "description": "Returns a policy string",
        "produces": [
          "application/json"
        ],
        "tags": [
          "policy"
        ],
        "summary": "Find policy by name",
        "operationId": "getPolicyByName",
        "parameters": [
          {
            "type": "string",
            "description": "name of the policy",
            "name": "policyName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "namespace of the policy",
            "name": "namespace",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "messages": {
                  "description": "Human readable messages from the server",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Message"
                  }
                },
                "policyName": {
                  "description": "The name of policy",
                  "type": "string",
                  "example": "policy-a"
                },
                "policyRaw": {
                  "description": "The raw policy as string",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "messages": {
                  "description": "Human readable messages from the server",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Message"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token accessor invalid/not enough permissions",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Policy not found",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal error processing request",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/policy/query/allowed": {
      "post": {
        "security": [
          {
            "TokenAccessorAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "policy"
        ],
        "summary": "Query if a path is allowed",
        "operationId": "queryPolicyAllowed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful query",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "messages": {
                  "description": "Human readable messages from the server",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Message"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token accessor invalid/not enough permissions",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal error processing request",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/policy/search": {
      "post": {
        "security": [
          {
            "TokenAccessorAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "policy"
        ],
        "summary": "Search which policy allow an operation on a vault path",
        "operationId": "searchPolicy",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "pathDetails": {
                  "properties": {
                    "namespace": {
                      "description": "The namespace in which the path/query occurs",
                      "type": "string",
                      "example": "meetpaas/mccdev"
                    },
                    "op": {
                      "description": "The HTTP operation for the pqth",
                      "type": "string",
                      "enum": [
                        "create",
                        "read",
                        "update",
                        "patch",
                        "delete",
                        "list",
                        "help",
                        "alias-lookahead",
                        "resolve-role",
                        "revoke",
                        "renew",
                        "rollback"
                      ],
                      "example": "create"
                    },
                    "path": {
                      "description": "The vault path for the query",
                      "type": "string",
                      "example": "secret/data/foo/bar"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "properties": {
                "denyingPolicySegments": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/PolicySegment"
                      }
                    }
                  }
                },
                "grantingPolicySegments": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/PolicySegment"
                      }
                    }
                  }
                },
                "messages": {
                  "description": "Human readable messages from the server",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Message"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "messages": {
                  "description": "Human readable messages from the server",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Message"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token accessor invalid/not enough permissions",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal error processing request",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/policy/tree": {
      "post": {
        "security": [
          {
            "TokenAccessorAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "policy"
        ],
        "summary": "Generates a tree using policies",
        "operationId": "policyTree",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "properties": {
                "messages": {
                  "description": "Human readable messages from the server",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Message"
                  }
                },
                "tree": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "messages": {
                  "description": "Human readable messages from the server",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Message"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token accessor invalid/not enough permissions",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal error processing request",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Message": {
      "properties": {
        "msgBody": {
          "type": "string"
        },
        "msgType": {
          "type": "string",
          "enum": [
            "info",
            "warn",
            "err"
          ]
        }
      }
    },
    "PolicySegment": {
      "properties": {
        "name": {
          "description": "name of the path segment",
          "type": "string"
        },
        "raw": {
          "description": "raw policy segment (hcl or json)",
          "type": "string"
        }
      }
    },
    "Request": {
      "type": "object",
      "properties": {
        "pathDetails": {
          "type": "object",
          "properties": {
            "namespace": {
              "description": "The namespace in which the path/query occurs",
              "type": "string",
              "example": "meetpaas/mccdev"
            },
            "op": {
              "description": "The HTTP operation for the pqth",
              "type": "string",
              "enum": [
                "create",
                "read",
                "update",
                "patch",
                "delete",
                "list",
                "help",
                "alias-lookahead",
                "resolve-role",
                "revoke",
                "renew",
                "rollback"
              ],
              "example": "create"
            },
            "path": {
              "description": "The vault path for the query",
              "type": "string",
              "example": "secret/data/foo/bar"
            }
          }
        },
        "policies": {
          "description": "Policies to check the query with (if policies is provided under tokenDetails, then this can be empty)",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "example": {
            "meetpaas/": [
              "root-policy-a",
              "root-policy-b",
              "root-policy-c"
            ],
            "meetpaas/mccdev": [
              "policy-a",
              "policy-b"
            ]
          }
        },
        "rawPolicy": {
          "description": "pass in raw HCL or JSON policy to add to ACL",
          "required": [
            "policy",
            "namespace",
            "name"
          ],
          "properties": {
            "name": {
              "description": "name of the policy (should be unique)",
              "type": "string"
            },
            "namespace": {
              "description": "The namespace this policy should be in",
              "type": "string",
              "example": "meetpaas/mccdev"
            },
            "policy": {
              "description": "Raw Policy",
              "type": "string"
            }
          }
        },
        "tokenDetails": {
          "properties": {
            "externalNamespacePolicies": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "identityPolicies": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "namespacePath": {
              "type": "string"
            },
            "policies": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Response": {
      "type": "object",
      "required": [
        "allowed"
      ],
      "properties": {
        "allowed": {
          "description": "whether the operation is allowed or not",
          "type": "boolean"
        },
        "allowedCap": {
          "description": "array of operations that is allowed (if allowed=true)",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "read",
            "create"
          ]
        },
        "denyingPolicySegments": {
          "description": "Policies that deny the operation (if allowed=false)",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PolicySegment"
              }
            }
          },
          "example": {
            "meetpaas/": {
              "root-policy-a": [
                {
                  "name": "\u003csegment-name\u003e",
                  "raw": "\u003c-raw-policy-segment\u003e"
                }
              ]
            }
          }
        },
        "grantingPolicySegments": {
          "description": "Policies that allow the operation (if allowed=true)",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PolicySegment"
              }
            }
          },
          "example": {
            "meetpaas/": {
              "root-policy-a": [
                {
                  "name": "\u003csegment-name\u003e",
                  "raw": "\u003c-raw-policy-segment\u003e"
                }
              ]
            }
          }
        },
        "messages": {
          "description": "Human readable mesages from the server",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          },
          "example": [
            {
              "msgBody": "Hello",
              "msgType": "info"
            },
            {
              "msgBody": "World",
              "msgType": "warn"
            }
          ]
        }
      }
    }
  },
  "securityDefinitions": {
    "TokenAccessorAuth": {
      "type": "apiKey",
      "name": "X-VAULT-TOKEN",
      "in": "header"
    }
  },
  "tags": [
    {
      "description": "Operations around vault policy",
      "name": "policy"
    }
  ],
  "x-components": {}
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "description": "This is a simple api to query vault for policies and entities",
    "title": "vault-query",
    "contact": {
      "email": "subbaksh@cisco.com"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/auth/search/policy": {
      "get": {
        "security": [
          {
            "TokenAccessorAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "auth"
        ],
        "summary": "Search which auth roles have a policy",
        "operationId": "searchAuthWithPolicy",
        "parameters": [
          {
            "type": "string",
            "description": "Name of policy",
            "name": "policyName",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Namespace of the policy",
            "name": "namespace",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "authRoles": {
                  "description": "The auth roles that have the policy",
                  "type": "object",
                  "additionalProperties": {
                    "type": "array",
                    "items": {
                      "type": "object"
                    }
                  }
                },
                "messages": {
                  "description": "Human readable messages from the server",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Message"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "messages": {
                  "description": "Human readable messages from the server",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Message"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token accessor invalid/not enough permissions",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Policy not found",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal error processing request",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/group/search/policy": {
      "get": {
        "security": [
          {
            "TokenAccessorAuth": []
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "group"
        ],
        "summary": "Search which groups have a policy",
        "operationId": "searchGroupWithPolicy",
        "parameters": [
          {
            "type": "string",
            "description": "Name of policy",
            "name": "policyName",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Namespace of the policy",
            "name": "namespace",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "additionalGroups": {
                  "description": "Any additional groups that might be related (such as parent or member groups)",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "groups": {
                  "description": "The groups that have the policy",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                },
                "messages": {
                  "description": "Human readable messages from the server",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Message"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "messages": {
                  "description": "Human readable messages from the server",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Message"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token accessor invalid/not enough permissions",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Policy not found",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal error processing request",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/policy/fetch/{policyName}": {
      "get": {
        "security": [
          {
            "TokenAccessorAuth": []
          }
        ],
        "description": "Returns a policy string",
        "produces": [
          "application/json"
        ],
        "tags": [
          "policy"
        ],
        "summary": "Find policy by name",
        "operationId": "getPolicyByName",
        "parameters": [
          {
            "type": "string",
            "description": "name of the policy",
            "name": "policyName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "namespace of the policy",
            "name": "namespace",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "messages": {
                  "description": "Human readable messages from the server",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Message"
                  }
                },
                "policyName": {
                  "description": "The name of policy",
                  "type": "string",
                  "example": "policy-a"
                },
                "policyRaw": {
                  "description": "The raw policy as string",
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "messages": {
                  "description": "Human readable messages from the server",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Message"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token accessor invalid/not enough permissions",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Policy not found",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal error processing request",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/policy/query/allowed": {
      "post": {
        "security": [
          {
            "TokenAccessorAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "policy"
        ],
        "summary": "Query if a path is allowed",
        "operationId": "queryPolicyAllowed",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful query",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "messages": {
                  "description": "Human readable messages from the server",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Message"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token accessor invalid/not enough permissions",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal error processing request",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/policy/search": {
      "post": {
        "security": [
          {
            "TokenAccessorAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "policy"
        ],
        "summary": "Search which policy allow an operation on a vault path",
        "operationId": "searchPolicy",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "pathDetails": {
                  "properties": {
                    "namespace": {
                      "description": "The namespace in which the path/query occurs",
                      "type": "string",
                      "example": "meetpaas/mccdev"
                    },
                    "op": {
                      "description": "The HTTP operation for the pqth",
                      "type": "string",
                      "enum": [
                        "create",
                        "read",
                        "update",
                        "patch",
                        "delete",
                        "list",
                        "help",
                        "alias-lookahead",
                        "resolve-role",
                        "revoke",
                        "renew",
                        "rollback"
                      ],
                      "example": "create"
                    },
                    "path": {
                      "description": "The vault path for the query",
                      "type": "string",
                      "example": "secret/data/foo/bar"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "properties": {
                "denyingPolicySegments": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/PolicySegment"
                      }
                    }
                  }
                },
                "grantingPolicySegments": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/PolicySegment"
                      }
                    }
                  }
                },
                "messages": {
                  "description": "Human readable messages from the server",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Message"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "messages": {
                  "description": "Human readable messages from the server",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Message"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token accessor invalid/not enough permissions",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal error processing request",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/policy/tree": {
      "post": {
        "security": [
          {
            "TokenAccessorAuth": []
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "policy"
        ],
        "summary": "Generates a tree using policies",
        "operationId": "policyTree",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Request"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "properties": {
                "messages": {
                  "description": "Human readable messages from the server",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Message"
                  }
                },
                "tree": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                },
                "messages": {
                  "description": "Human readable messages from the server",
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Message"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token accessor invalid/not enough permissions",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal error processing request",
            "schema": {
              "properties": {
                "id": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Message": {
      "properties": {
        "msgBody": {
          "type": "string"
        },
        "msgType": {
          "type": "string",
          "enum": [
            "info",
            "warn",
            "err"
          ]
        }
      }
    },
    "PolicySegment": {
      "properties": {
        "name": {
          "description": "name of the path segment",
          "type": "string"
        },
        "raw": {
          "description": "raw policy segment (hcl or json)",
          "type": "string"
        }
      }
    },
    "Request": {
      "type": "object",
      "properties": {
        "pathDetails": {
          "type": "object",
          "properties": {
            "namespace": {
              "description": "The namespace in which the path/query occurs",
              "type": "string",
              "example": "meetpaas/mccdev"
            },
            "op": {
              "description": "The HTTP operation for the pqth",
              "type": "string",
              "enum": [
                "create",
                "read",
                "update",
                "patch",
                "delete",
                "list",
                "help",
                "alias-lookahead",
                "resolve-role",
                "revoke",
                "renew",
                "rollback"
              ],
              "example": "create"
            },
            "path": {
              "description": "The vault path for the query",
              "type": "string",
              "example": "secret/data/foo/bar"
            }
          }
        },
        "policies": {
          "description": "Policies to check the query with (if policies is provided under tokenDetails, then this can be empty)",
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "example": {
            "meetpaas/": [
              "root-policy-a",
              "root-policy-b",
              "root-policy-c"
            ],
            "meetpaas/mccdev": [
              "policy-a",
              "policy-b"
            ]
          }
        },
        "rawPolicy": {
          "description": "pass in raw HCL or JSON policy to add to ACL",
          "required": [
            "policy",
            "namespace",
            "name"
          ],
          "properties": {
            "name": {
              "description": "name of the policy (should be unique)",
              "type": "string"
            },
            "namespace": {
              "description": "The namespace this policy should be in",
              "type": "string",
              "example": "meetpaas/mccdev"
            },
            "policy": {
              "description": "Raw Policy",
              "type": "string"
            }
          }
        },
        "tokenDetails": {
          "properties": {
            "externalNamespacePolicies": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "identityPolicies": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "namespacePath": {
              "type": "string"
            },
            "policies": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "RequestPathDetails": {
      "type": "object",
      "properties": {
        "namespace": {
          "description": "The namespace in which the path/query occurs",
          "type": "string",
          "example": "meetpaas/mccdev"
        },
        "op": {
          "description": "The HTTP operation for the pqth",
          "type": "string",
          "enum": [
            "create",
            "read",
            "update",
            "patch",
            "delete",
            "list",
            "help",
            "alias-lookahead",
            "resolve-role",
            "revoke",
            "renew",
            "rollback"
          ],
          "example": "create"
        },
        "path": {
          "description": "The vault path for the query",
          "type": "string",
          "example": "secret/data/foo/bar"
        }
      }
    },
    "RequestRawPolicy": {
      "description": "pass in raw HCL or JSON policy to add to ACL",
      "required": [
        "policy",
        "namespace",
        "name"
      ],
      "properties": {
        "name": {
          "description": "name of the policy (should be unique)",
          "type": "string"
        },
        "namespace": {
          "description": "The namespace this policy should be in",
          "type": "string",
          "example": "meetpaas/mccdev"
        },
        "policy": {
          "description": "Raw Policy",
          "type": "string"
        }
      }
    },
    "RequestTokenDetails": {
      "properties": {
        "externalNamespacePolicies": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "identityPolicies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "namespacePath": {
          "type": "string"
        },
        "policies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Response": {
      "type": "object",
      "required": [
        "allowed"
      ],
      "properties": {
        "allowed": {
          "description": "whether the operation is allowed or not",
          "type": "boolean"
        },
        "allowedCap": {
          "description": "array of operations that is allowed (if allowed=true)",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "read",
            "create"
          ]
        },
        "denyingPolicySegments": {
          "description": "Policies that deny the operation (if allowed=false)",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PolicySegment"
              }
            }
          },
          "example": {
            "meetpaas/": {
              "root-policy-a": [
                {
                  "name": "\u003csegment-name\u003e",
                  "raw": "\u003c-raw-policy-segment\u003e"
                }
              ]
            }
          }
        },
        "grantingPolicySegments": {
          "description": "Policies that allow the operation (if allowed=true)",
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PolicySegment"
              }
            }
          },
          "example": {
            "meetpaas/": {
              "root-policy-a": [
                {
                  "name": "\u003csegment-name\u003e",
                  "raw": "\u003c-raw-policy-segment\u003e"
                }
              ]
            }
          }
        },
        "messages": {
          "description": "Human readable mesages from the server",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Message"
          },
          "example": [
            {
              "msgBody": "Hello",
              "msgType": "info"
            },
            {
              "msgBody": "World",
              "msgType": "warn"
            }
          ]
        }
      }
    },
    "SearchPolicyParamsBodyPathDetails": {
      "properties": {
        "namespace": {
          "description": "The namespace in which the path/query occurs",
          "type": "string",
          "example": "meetpaas/mccdev"
        },
        "op": {
          "description": "The HTTP operation for the pqth",
          "type": "string",
          "enum": [
            "create",
            "read",
            "update",
            "patch",
            "delete",
            "list",
            "help",
            "alias-lookahead",
            "resolve-role",
            "revoke",
            "renew",
            "rollback"
          ],
          "example": "create"
        },
        "path": {
          "description": "The vault path for the query",
          "type": "string",
          "example": "secret/data/foo/bar"
        }
      }
    }
  },
  "securityDefinitions": {
    "TokenAccessorAuth": {
      "type": "apiKey",
      "name": "X-VAULT-TOKEN",
      "in": "header"
    }
  },
  "tags": [
    {
      "description": "Operations around vault policy",
      "name": "policy"
    }
  ],
  "x-components": {}
}`))
}
