// Code generated by go-swagger; DO NOT EDIT.

package group

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// SearchGroupWithPolicyOKCode is the HTTP code returned for type SearchGroupWithPolicyOK
const SearchGroupWithPolicyOKCode int = 200

/*
SearchGroupWithPolicyOK successful operation

swagger:response searchGroupWithPolicyOK
*/
type SearchGroupWithPolicyOK struct {

	/*
	  In: Body
	*/
	Payload *SearchGroupWithPolicyOKBody `json:"body,omitempty"`
}

// NewSearchGroupWithPolicyOK creates SearchGroupWithPolicyOK with default headers values
func NewSearchGroupWithPolicyOK() *SearchGroupWithPolicyOK {

	return &SearchGroupWithPolicyOK{}
}

// WithPayload adds the payload to the search group with policy o k response
func (o *SearchGroupWithPolicyOK) WithPayload(payload *SearchGroupWithPolicyOKBody) *SearchGroupWithPolicyOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the search group with policy o k response
func (o *SearchGroupWithPolicyOK) SetPayload(payload *SearchGroupWithPolicyOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SearchGroupWithPolicyOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SearchGroupWithPolicyBadRequestCode is the HTTP code returned for type SearchGroupWithPolicyBadRequest
const SearchGroupWithPolicyBadRequestCode int = 400

/*
SearchGroupWithPolicyBadRequest Bad request

swagger:response searchGroupWithPolicyBadRequest
*/
type SearchGroupWithPolicyBadRequest struct {

	/*
	  In: Body
	*/
	Payload *SearchGroupWithPolicyBadRequestBody `json:"body,omitempty"`
}

// NewSearchGroupWithPolicyBadRequest creates SearchGroupWithPolicyBadRequest with default headers values
func NewSearchGroupWithPolicyBadRequest() *SearchGroupWithPolicyBadRequest {

	return &SearchGroupWithPolicyBadRequest{}
}

// WithPayload adds the payload to the search group with policy bad request response
func (o *SearchGroupWithPolicyBadRequest) WithPayload(payload *SearchGroupWithPolicyBadRequestBody) *SearchGroupWithPolicyBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the search group with policy bad request response
func (o *SearchGroupWithPolicyBadRequest) SetPayload(payload *SearchGroupWithPolicyBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SearchGroupWithPolicyBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SearchGroupWithPolicyUnauthorizedCode is the HTTP code returned for type SearchGroupWithPolicyUnauthorized
const SearchGroupWithPolicyUnauthorizedCode int = 401

/*
SearchGroupWithPolicyUnauthorized Token accessor invalid/not enough permissions

swagger:response searchGroupWithPolicyUnauthorized
*/
type SearchGroupWithPolicyUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *SearchGroupWithPolicyUnauthorizedBody `json:"body,omitempty"`
}

// NewSearchGroupWithPolicyUnauthorized creates SearchGroupWithPolicyUnauthorized with default headers values
func NewSearchGroupWithPolicyUnauthorized() *SearchGroupWithPolicyUnauthorized {

	return &SearchGroupWithPolicyUnauthorized{}
}

// WithPayload adds the payload to the search group with policy unauthorized response
func (o *SearchGroupWithPolicyUnauthorized) WithPayload(payload *SearchGroupWithPolicyUnauthorizedBody) *SearchGroupWithPolicyUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the search group with policy unauthorized response
func (o *SearchGroupWithPolicyUnauthorized) SetPayload(payload *SearchGroupWithPolicyUnauthorizedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SearchGroupWithPolicyUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SearchGroupWithPolicyNotFoundCode is the HTTP code returned for type SearchGroupWithPolicyNotFound
const SearchGroupWithPolicyNotFoundCode int = 404

/*
SearchGroupWithPolicyNotFound Policy not found

swagger:response searchGroupWithPolicyNotFound
*/
type SearchGroupWithPolicyNotFound struct {

	/*
	  In: Body
	*/
	Payload *SearchGroupWithPolicyNotFoundBody `json:"body,omitempty"`
}

// NewSearchGroupWithPolicyNotFound creates SearchGroupWithPolicyNotFound with default headers values
func NewSearchGroupWithPolicyNotFound() *SearchGroupWithPolicyNotFound {

	return &SearchGroupWithPolicyNotFound{}
}

// WithPayload adds the payload to the search group with policy not found response
func (o *SearchGroupWithPolicyNotFound) WithPayload(payload *SearchGroupWithPolicyNotFoundBody) *SearchGroupWithPolicyNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the search group with policy not found response
func (o *SearchGroupWithPolicyNotFound) SetPayload(payload *SearchGroupWithPolicyNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SearchGroupWithPolicyNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SearchGroupWithPolicyInternalServerErrorCode is the HTTP code returned for type SearchGroupWithPolicyInternalServerError
const SearchGroupWithPolicyInternalServerErrorCode int = 500

/*
SearchGroupWithPolicyInternalServerError Internal error processing request

swagger:response searchGroupWithPolicyInternalServerError
*/
type SearchGroupWithPolicyInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *SearchGroupWithPolicyInternalServerErrorBody `json:"body,omitempty"`
}

// NewSearchGroupWithPolicyInternalServerError creates SearchGroupWithPolicyInternalServerError with default headers values
func NewSearchGroupWithPolicyInternalServerError() *SearchGroupWithPolicyInternalServerError {

	return &SearchGroupWithPolicyInternalServerError{}
}

// WithPayload adds the payload to the search group with policy internal server error response
func (o *SearchGroupWithPolicyInternalServerError) WithPayload(payload *SearchGroupWithPolicyInternalServerErrorBody) *SearchGroupWithPolicyInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the search group with policy internal server error response
func (o *SearchGroupWithPolicyInternalServerError) SetPayload(payload *SearchGroupWithPolicyInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SearchGroupWithPolicyInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
