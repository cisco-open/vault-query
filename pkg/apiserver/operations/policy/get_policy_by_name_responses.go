// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// GetPolicyByNameOKCode is the HTTP code returned for type GetPolicyByNameOK
const GetPolicyByNameOKCode int = 200

/*
GetPolicyByNameOK successful operation

swagger:response getPolicyByNameOK
*/
type GetPolicyByNameOK struct {

	/*
	  In: Body
	*/
	Payload *GetPolicyByNameOKBody `json:"body,omitempty"`
}

// NewGetPolicyByNameOK creates GetPolicyByNameOK with default headers values
func NewGetPolicyByNameOK() *GetPolicyByNameOK {

	return &GetPolicyByNameOK{}
}

// WithPayload adds the payload to the get policy by name o k response
func (o *GetPolicyByNameOK) WithPayload(payload *GetPolicyByNameOKBody) *GetPolicyByNameOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get policy by name o k response
func (o *GetPolicyByNameOK) SetPayload(payload *GetPolicyByNameOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPolicyByNameOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPolicyByNameBadRequestCode is the HTTP code returned for type GetPolicyByNameBadRequest
const GetPolicyByNameBadRequestCode int = 400

/*
GetPolicyByNameBadRequest Bad request

swagger:response getPolicyByNameBadRequest
*/
type GetPolicyByNameBadRequest struct {

	/*
	  In: Body
	*/
	Payload *GetPolicyByNameBadRequestBody `json:"body,omitempty"`
}

// NewGetPolicyByNameBadRequest creates GetPolicyByNameBadRequest with default headers values
func NewGetPolicyByNameBadRequest() *GetPolicyByNameBadRequest {

	return &GetPolicyByNameBadRequest{}
}

// WithPayload adds the payload to the get policy by name bad request response
func (o *GetPolicyByNameBadRequest) WithPayload(payload *GetPolicyByNameBadRequestBody) *GetPolicyByNameBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get policy by name bad request response
func (o *GetPolicyByNameBadRequest) SetPayload(payload *GetPolicyByNameBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPolicyByNameBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPolicyByNameUnauthorizedCode is the HTTP code returned for type GetPolicyByNameUnauthorized
const GetPolicyByNameUnauthorizedCode int = 401

/*
GetPolicyByNameUnauthorized Token accessor invalid/not enough permissions

swagger:response getPolicyByNameUnauthorized
*/
type GetPolicyByNameUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *GetPolicyByNameUnauthorizedBody `json:"body,omitempty"`
}

// NewGetPolicyByNameUnauthorized creates GetPolicyByNameUnauthorized with default headers values
func NewGetPolicyByNameUnauthorized() *GetPolicyByNameUnauthorized {

	return &GetPolicyByNameUnauthorized{}
}

// WithPayload adds the payload to the get policy by name unauthorized response
func (o *GetPolicyByNameUnauthorized) WithPayload(payload *GetPolicyByNameUnauthorizedBody) *GetPolicyByNameUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get policy by name unauthorized response
func (o *GetPolicyByNameUnauthorized) SetPayload(payload *GetPolicyByNameUnauthorizedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPolicyByNameUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPolicyByNameNotFoundCode is the HTTP code returned for type GetPolicyByNameNotFound
const GetPolicyByNameNotFoundCode int = 404

/*
GetPolicyByNameNotFound Policy not found

swagger:response getPolicyByNameNotFound
*/
type GetPolicyByNameNotFound struct {

	/*
	  In: Body
	*/
	Payload *GetPolicyByNameNotFoundBody `json:"body,omitempty"`
}

// NewGetPolicyByNameNotFound creates GetPolicyByNameNotFound with default headers values
func NewGetPolicyByNameNotFound() *GetPolicyByNameNotFound {

	return &GetPolicyByNameNotFound{}
}

// WithPayload adds the payload to the get policy by name not found response
func (o *GetPolicyByNameNotFound) WithPayload(payload *GetPolicyByNameNotFoundBody) *GetPolicyByNameNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get policy by name not found response
func (o *GetPolicyByNameNotFound) SetPayload(payload *GetPolicyByNameNotFoundBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPolicyByNameNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetPolicyByNameInternalServerErrorCode is the HTTP code returned for type GetPolicyByNameInternalServerError
const GetPolicyByNameInternalServerErrorCode int = 500

/*
GetPolicyByNameInternalServerError Internal error processing request

swagger:response getPolicyByNameInternalServerError
*/
type GetPolicyByNameInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *GetPolicyByNameInternalServerErrorBody `json:"body,omitempty"`
}

// NewGetPolicyByNameInternalServerError creates GetPolicyByNameInternalServerError with default headers values
func NewGetPolicyByNameInternalServerError() *GetPolicyByNameInternalServerError {

	return &GetPolicyByNameInternalServerError{}
}

// WithPayload adds the payload to the get policy by name internal server error response
func (o *GetPolicyByNameInternalServerError) WithPayload(payload *GetPolicyByNameInternalServerErrorBody) *GetPolicyByNameInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get policy by name internal server error response
func (o *GetPolicyByNameInternalServerError) SetPayload(payload *GetPolicyByNameInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetPolicyByNameInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
