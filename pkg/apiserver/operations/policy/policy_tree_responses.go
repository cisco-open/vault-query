// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PolicyTreeOKCode is the HTTP code returned for type PolicyTreeOK
const PolicyTreeOKCode int = 200

/*
PolicyTreeOK successful operation

swagger:response policyTreeOK
*/
type PolicyTreeOK struct {

	/*
	  In: Body
	*/
	Payload *PolicyTreeOKBody `json:"body,omitempty"`
}

// NewPolicyTreeOK creates PolicyTreeOK with default headers values
func NewPolicyTreeOK() *PolicyTreeOK {

	return &PolicyTreeOK{}
}

// WithPayload adds the payload to the policy tree o k response
func (o *PolicyTreeOK) WithPayload(payload *PolicyTreeOKBody) *PolicyTreeOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the policy tree o k response
func (o *PolicyTreeOK) SetPayload(payload *PolicyTreeOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PolicyTreeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PolicyTreeBadRequestCode is the HTTP code returned for type PolicyTreeBadRequest
const PolicyTreeBadRequestCode int = 400

/*
PolicyTreeBadRequest Bad request

swagger:response policyTreeBadRequest
*/
type PolicyTreeBadRequest struct {

	/*
	  In: Body
	*/
	Payload *PolicyTreeBadRequestBody `json:"body,omitempty"`
}

// NewPolicyTreeBadRequest creates PolicyTreeBadRequest with default headers values
func NewPolicyTreeBadRequest() *PolicyTreeBadRequest {

	return &PolicyTreeBadRequest{}
}

// WithPayload adds the payload to the policy tree bad request response
func (o *PolicyTreeBadRequest) WithPayload(payload *PolicyTreeBadRequestBody) *PolicyTreeBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the policy tree bad request response
func (o *PolicyTreeBadRequest) SetPayload(payload *PolicyTreeBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PolicyTreeBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PolicyTreeUnauthorizedCode is the HTTP code returned for type PolicyTreeUnauthorized
const PolicyTreeUnauthorizedCode int = 401

/*
PolicyTreeUnauthorized Token accessor invalid/not enough permissions

swagger:response policyTreeUnauthorized
*/
type PolicyTreeUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *PolicyTreeUnauthorizedBody `json:"body,omitempty"`
}

// NewPolicyTreeUnauthorized creates PolicyTreeUnauthorized with default headers values
func NewPolicyTreeUnauthorized() *PolicyTreeUnauthorized {

	return &PolicyTreeUnauthorized{}
}

// WithPayload adds the payload to the policy tree unauthorized response
func (o *PolicyTreeUnauthorized) WithPayload(payload *PolicyTreeUnauthorizedBody) *PolicyTreeUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the policy tree unauthorized response
func (o *PolicyTreeUnauthorized) SetPayload(payload *PolicyTreeUnauthorizedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PolicyTreeUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PolicyTreeInternalServerErrorCode is the HTTP code returned for type PolicyTreeInternalServerError
const PolicyTreeInternalServerErrorCode int = 500

/*
PolicyTreeInternalServerError Internal error processing request

swagger:response policyTreeInternalServerError
*/
type PolicyTreeInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *PolicyTreeInternalServerErrorBody `json:"body,omitempty"`
}

// NewPolicyTreeInternalServerError creates PolicyTreeInternalServerError with default headers values
func NewPolicyTreeInternalServerError() *PolicyTreeInternalServerError {

	return &PolicyTreeInternalServerError{}
}

// WithPayload adds the payload to the policy tree internal server error response
func (o *PolicyTreeInternalServerError) WithPayload(payload *PolicyTreeInternalServerErrorBody) *PolicyTreeInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the policy tree internal server error response
func (o *PolicyTreeInternalServerError) SetPayload(payload *PolicyTreeInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PolicyTreeInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
