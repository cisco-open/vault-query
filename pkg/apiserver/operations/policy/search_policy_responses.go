// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// SearchPolicyOKCode is the HTTP code returned for type SearchPolicyOK
const SearchPolicyOKCode int = 200

/*
SearchPolicyOK successful operation

swagger:response searchPolicyOK
*/
type SearchPolicyOK struct {

	/*
	  In: Body
	*/
	Payload *SearchPolicyOKBody `json:"body,omitempty"`
}

// NewSearchPolicyOK creates SearchPolicyOK with default headers values
func NewSearchPolicyOK() *SearchPolicyOK {

	return &SearchPolicyOK{}
}

// WithPayload adds the payload to the search policy o k response
func (o *SearchPolicyOK) WithPayload(payload *SearchPolicyOKBody) *SearchPolicyOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the search policy o k response
func (o *SearchPolicyOK) SetPayload(payload *SearchPolicyOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SearchPolicyOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SearchPolicyBadRequestCode is the HTTP code returned for type SearchPolicyBadRequest
const SearchPolicyBadRequestCode int = 400

/*
SearchPolicyBadRequest Bad request

swagger:response searchPolicyBadRequest
*/
type SearchPolicyBadRequest struct {

	/*
	  In: Body
	*/
	Payload *SearchPolicyBadRequestBody `json:"body,omitempty"`
}

// NewSearchPolicyBadRequest creates SearchPolicyBadRequest with default headers values
func NewSearchPolicyBadRequest() *SearchPolicyBadRequest {

	return &SearchPolicyBadRequest{}
}

// WithPayload adds the payload to the search policy bad request response
func (o *SearchPolicyBadRequest) WithPayload(payload *SearchPolicyBadRequestBody) *SearchPolicyBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the search policy bad request response
func (o *SearchPolicyBadRequest) SetPayload(payload *SearchPolicyBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SearchPolicyBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SearchPolicyUnauthorizedCode is the HTTP code returned for type SearchPolicyUnauthorized
const SearchPolicyUnauthorizedCode int = 401

/*
SearchPolicyUnauthorized Token accessor invalid/not enough permissions

swagger:response searchPolicyUnauthorized
*/
type SearchPolicyUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *SearchPolicyUnauthorizedBody `json:"body,omitempty"`
}

// NewSearchPolicyUnauthorized creates SearchPolicyUnauthorized with default headers values
func NewSearchPolicyUnauthorized() *SearchPolicyUnauthorized {

	return &SearchPolicyUnauthorized{}
}

// WithPayload adds the payload to the search policy unauthorized response
func (o *SearchPolicyUnauthorized) WithPayload(payload *SearchPolicyUnauthorizedBody) *SearchPolicyUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the search policy unauthorized response
func (o *SearchPolicyUnauthorized) SetPayload(payload *SearchPolicyUnauthorizedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SearchPolicyUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// SearchPolicyInternalServerErrorCode is the HTTP code returned for type SearchPolicyInternalServerError
const SearchPolicyInternalServerErrorCode int = 500

/*
SearchPolicyInternalServerError Internal error processing request

swagger:response searchPolicyInternalServerError
*/
type SearchPolicyInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *SearchPolicyInternalServerErrorBody `json:"body,omitempty"`
}

// NewSearchPolicyInternalServerError creates SearchPolicyInternalServerError with default headers values
func NewSearchPolicyInternalServerError() *SearchPolicyInternalServerError {

	return &SearchPolicyInternalServerError{}
}

// WithPayload adds the payload to the search policy internal server error response
func (o *SearchPolicyInternalServerError) WithPayload(payload *SearchPolicyInternalServerErrorBody) *SearchPolicyInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the search policy internal server error response
func (o *SearchPolicyInternalServerError) SetPayload(payload *SearchPolicyInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SearchPolicyInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
