// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// PostPolicySearchOKCode is the HTTP code returned for type PostPolicySearchOK
const PostPolicySearchOKCode int = 200

/*
PostPolicySearchOK successful operation

swagger:response postPolicySearchOK
*/
type PostPolicySearchOK struct {

	/*
	  In: Body
	*/
	Payload *PostPolicySearchOKBody `json:"body,omitempty"`
}

// NewPostPolicySearchOK creates PostPolicySearchOK with default headers values
func NewPostPolicySearchOK() *PostPolicySearchOK {

	return &PostPolicySearchOK{}
}

// WithPayload adds the payload to the post policy search o k response
func (o *PostPolicySearchOK) WithPayload(payload *PostPolicySearchOKBody) *PostPolicySearchOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post policy search o k response
func (o *PostPolicySearchOK) SetPayload(payload *PostPolicySearchOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostPolicySearchOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostPolicySearchBadRequestCode is the HTTP code returned for type PostPolicySearchBadRequest
const PostPolicySearchBadRequestCode int = 400

/*
PostPolicySearchBadRequest Bad request

swagger:response postPolicySearchBadRequest
*/
type PostPolicySearchBadRequest struct {

	/*
	  In: Body
	*/
	Payload *PostPolicySearchBadRequestBody `json:"body,omitempty"`
}

// NewPostPolicySearchBadRequest creates PostPolicySearchBadRequest with default headers values
func NewPostPolicySearchBadRequest() *PostPolicySearchBadRequest {

	return &PostPolicySearchBadRequest{}
}

// WithPayload adds the payload to the post policy search bad request response
func (o *PostPolicySearchBadRequest) WithPayload(payload *PostPolicySearchBadRequestBody) *PostPolicySearchBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post policy search bad request response
func (o *PostPolicySearchBadRequest) SetPayload(payload *PostPolicySearchBadRequestBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostPolicySearchBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostPolicySearchUnauthorizedCode is the HTTP code returned for type PostPolicySearchUnauthorized
const PostPolicySearchUnauthorizedCode int = 401

/*
PostPolicySearchUnauthorized Token accessor invalid/not enough permissions

swagger:response postPolicySearchUnauthorized
*/
type PostPolicySearchUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *PostPolicySearchUnauthorizedBody `json:"body,omitempty"`
}

// NewPostPolicySearchUnauthorized creates PostPolicySearchUnauthorized with default headers values
func NewPostPolicySearchUnauthorized() *PostPolicySearchUnauthorized {

	return &PostPolicySearchUnauthorized{}
}

// WithPayload adds the payload to the post policy search unauthorized response
func (o *PostPolicySearchUnauthorized) WithPayload(payload *PostPolicySearchUnauthorizedBody) *PostPolicySearchUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post policy search unauthorized response
func (o *PostPolicySearchUnauthorized) SetPayload(payload *PostPolicySearchUnauthorizedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostPolicySearchUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostPolicySearchInternalServerErrorCode is the HTTP code returned for type PostPolicySearchInternalServerError
const PostPolicySearchInternalServerErrorCode int = 500

/*
PostPolicySearchInternalServerError Internal error processing request

swagger:response postPolicySearchInternalServerError
*/
type PostPolicySearchInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *PostPolicySearchInternalServerErrorBody `json:"body,omitempty"`
}

// NewPostPolicySearchInternalServerError creates PostPolicySearchInternalServerError with default headers values
func NewPostPolicySearchInternalServerError() *PostPolicySearchInternalServerError {

	return &PostPolicySearchInternalServerError{}
}

// WithPayload adds the payload to the post policy search internal server error response
func (o *PostPolicySearchInternalServerError) WithPayload(payload *PostPolicySearchInternalServerErrorBody) *PostPolicySearchInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post policy search internal server error response
func (o *PostPolicySearchInternalServerError) SetPayload(payload *PostPolicySearchInternalServerErrorBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostPolicySearchInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
